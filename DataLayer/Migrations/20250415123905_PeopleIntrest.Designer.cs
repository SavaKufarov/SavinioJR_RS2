// <auto-generated />
using System;
using BusinessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(PeopleIntrestDbContext))]
    [Migration("20250415123905_PeopleIntrest")]
    partial class PeopleIntrest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BusinessLayer.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.ToTable("friends");
                });

            modelBuilder.Entity("BusinessLayer.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int")
                        .HasColumnName("districtId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("interests");
                });

            modelBuilder.Entity("BusinessLayer.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int")
                        .HasColumnName("districtId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("firstName");

                    b.Property<int?>("FriendsId")
                        .HasColumnType("int")
                        .HasColumnName("friendsId");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("lastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("BusinessLayer.Userfriend", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.Property<int>("FriendsId")
                        .HasColumnType("int")
                        .HasColumnName("friendsId");

                    b.HasKey("UserId", "FriendsId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FriendsId" }, "FK_UserFriends_Friends");

                    b.ToTable("userfriends");
                });

            modelBuilder.Entity("BusinessLayer.Userfriend", b =>
                {
                    b.HasOne("BusinessLayer.Friend", "Friends")
                        .WithMany("Userfriends")
                        .HasForeignKey("FriendsId")
                        .HasConstraintName("FK_UserFriends_Friends")
                        .IsRequired();

                    b.HasOne("BusinessLayer.User", "User")
                        .WithMany("Userfriends")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserFriends_User")
                        .IsRequired();

                    b.Navigation("Friends");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessLayer.Friend", b =>
                {
                    b.Navigation("Userfriends");
                });

            modelBuilder.Entity("BusinessLayer.User", b =>
                {
                    b.Navigation("Userfriends");
                });
#pragma warning restore 612, 618
        }
    }
}
